@using System.Collections
@model IEnumerable
@{
    var genericType = Model.GetType().GetGenericArguments()[0];
    var properties = genericType.GetProperties();
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title"><strong>@genericType.Name</strong></h3>
    </div>
    <div class="card-body">
        <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap4">
                
                <div class="col-sm-12">
                    <table id="example1" class="table table-hover table-bordered table-striped dataTable dtr-inline" role="grid" aria-describedby="example1_info">
                        <thead>
                            <tr role="row">
                                @foreach (var item in properties)
                                {
                                    <th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending">@item.Name</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (object data in Model)
                            {
                                <tr class="odd">
                                    @foreach (var property in properties)
                                    {
                                        <td>@property.GetValue(data)</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

